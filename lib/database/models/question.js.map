{"version":3,"file":"question.js","names":["Model","require","module","exports","sequelize","DataTypes","Question","associate","models","belongsTo","Form","foreignKey","allowNull","hasMany","Answer","init","question_id","primaryKey","type","INTEGER","autoIncrement","question_text","TEXT","question_type","STRING","max","defaultValue","question_options","question_width","question_group","question_subtitle","question_instruccions","modelName","tableName","timestamps","paranoid","createdAt","updatedAt","deletedAt"],"sources":["../../../src/database/models/question.js"],"sourcesContent":["'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Question extends Model {\r\n    static associate(models) {\r\n      Question.belongsTo(models.Form, {\r\n        foreignKey: 'form_id',\r\n        allowNull: false\r\n      });\r\n      Question.hasMany(models.Answer, {\r\n        foreignKey: 'question_id',\r\n        allowNull: false\r\n      });\r\n    }\r\n  }\r\n  Question.init({\r\n    question_id: {\r\n      primaryKey: true,\r\n      type: DataTypes.INTEGER,\r\n      autoIncrement: true,\r\n    },\r\n    question_text: {\r\n      type: DataTypes.TEXT,\r\n      allowNull: false\r\n    },\r\n    question_type: {\r\n      type: DataTypes.STRING,\r\n      max: 100,\r\n      allowNull: false,\r\n      defaultValue: 'text'\r\n    },\r\n    question_options: {\r\n      type: DataTypes.TEXT\r\n    },\r\n    question_width: {\r\n      type: DataTypes.INTEGER,\r\n      allowNull: true,\r\n      defaultValue: 1\r\n    },\r\n    question_group: {\r\n      type: DataTypes.STRING,\r\n      allowNull: true\r\n    },\r\n    question_subtitle: {\r\n      type: DataTypes.TEXT,\r\n      allowNull: true\r\n    },\r\n    question_instruccions: {\r\n      type: DataTypes.STRING,\r\n      allowNull: true\r\n    }\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Question',\r\n    tableName: 'question',\r\n    timestamps: true,\r\n    paranoid: true,\r\n    createdAt: 'question_createdAt',\r\n    updatedAt: 'question_updatedAt',\r\n    deletedAt: 'question_deletedAt',\r\n  });\r\n  return Question;\r\n};"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EACJA;AACF,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxBC,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,QAAQ,SAASN,KAAK,CAAC;IAC3B,OAAOO,SAASA,CAACC,MAAM,EAAE;MACvBF,QAAQ,CAACG,SAAS,CAACD,MAAM,CAACE,IAAI,EAAE;QAC9BC,UAAU,EAAE,SAAS;QACrBC,SAAS,EAAE;MACb,CAAC,CAAC;MACFN,QAAQ,CAACO,OAAO,CAACL,MAAM,CAACM,MAAM,EAAE;QAC9BH,UAAU,EAAE,aAAa;QACzBC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EACF;EACAN,QAAQ,CAACS,IAAI,CAAC;IACZC,WAAW,EAAE;MACXC,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAEb,SAAS,CAACc,OAAO;MACvBC,aAAa,EAAE;IACjB,CAAC;IACDC,aAAa,EAAE;MACbH,IAAI,EAAEb,SAAS,CAACiB,IAAI;MACpBV,SAAS,EAAE;IACb,CAAC;IACDW,aAAa,EAAE;MACbL,IAAI,EAAEb,SAAS,CAACmB,MAAM;MACtBC,GAAG,EAAE,GAAG;MACRb,SAAS,EAAE,KAAK;MAChBc,YAAY,EAAE;IAChB,CAAC;IACDC,gBAAgB,EAAE;MAChBT,IAAI,EAAEb,SAAS,CAACiB;IAClB,CAAC;IACDM,cAAc,EAAE;MACdV,IAAI,EAAEb,SAAS,CAACc,OAAO;MACvBP,SAAS,EAAE,IAAI;MACfc,YAAY,EAAE;IAChB,CAAC;IACDG,cAAc,EAAE;MACdX,IAAI,EAAEb,SAAS,CAACmB,MAAM;MACtBZ,SAAS,EAAE;IACb,CAAC;IACDkB,iBAAiB,EAAE;MACjBZ,IAAI,EAAEb,SAAS,CAACiB,IAAI;MACpBV,SAAS,EAAE;IACb,CAAC;IACDmB,qBAAqB,EAAE;MACrBb,IAAI,EAAEb,SAAS,CAACmB,MAAM;MACtBZ,SAAS,EAAE;IACb;EACF,CAAC,EAAE;IACDR,SAAS;IACT4B,SAAS,EAAE,UAAU;IACrBC,SAAS,EAAE,UAAU;IACrBC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,oBAAoB;IAC/BC,SAAS,EAAE,oBAAoB;IAC/BC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,OAAOhC,QAAQ;AACjB,CAAC"}