{"version":3,"file":"question.controller.js","names":["_core","require","_models","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","getQuestions","req","res","data","db","Question","findAll","include","model","Form","status","json","mensaje","success","error","exports","isSameDayDateTime","attribute","date","console","log","Op","and","gte","lte","getQuestionsByFormByParticipant","Answer","where","participante_id","params","participant_id","answer_createdAt","sequelize","fn","form_id","createQuestion","question_text","question_type","question_options","question_group","question_width","body","question","create","getQuestion","findByPk","id","updateQuestion","update","question_id","deleteQuestion","destroy"],"sources":["../../src/controllers/question.controller.js"],"sourcesContent":["import { Op } from \"@sequelize/core\";\r\nimport db, { sequelize } from \"../database/models\";\r\n\r\nexport const getQuestions = async (req, res) => {\r\n  try {\r\n    const data = await db.Question.findAll({\r\n      include: [{ model: db.Form }],\r\n    });\r\n    res\r\n      .status(200)\r\n      .json({ data, mensaje: \"Operación realizada con exito\", success: true });\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      mensaje: \"Ocurrio un error al consultar los datos\",\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nfunction isSameDayDateTime(attribute, date) {\r\n  console.log(attribute,date)\r\n  return {\r\n    [attribute]: {\r\n      [Op.and]: {\r\n        [Op.gte]: date + ' 00:00:00',\r\n        [Op.lte]: date + ' 23:59:59.999999',\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const getQuestionsByFormByParticipant = async (req, res) => {\r\n  try {\r\n    const data = await db.Question.findAll({\r\n      include: [\r\n        { model: db.Form },\r\n        {\r\n          model: db.Answer,\r\n          where: {\r\n            [Op.and]: [\r\n              { participante_id: req.params.participant_id },\r\n              { answer_createdAt: sequelize.fn('date', req.params.date)}\r\n              // isSameDayDateTime('answer_createdAt', req.params.date),\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n      where: { form_id: req.params.form_id },\r\n    });\r\n    res\r\n      .status(200)\r\n      .json({ data, mensaje: \"Operación realizada con exito\", success: true });\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      error,\r\n      mensaje: \"Ocurrio un error al consultar los datos\",\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createQuestion = async (req, res) => {\r\n  try {\r\n    const {\r\n      form_id,\r\n      question_text,\r\n      question_type,\r\n      question_options,\r\n      question_group,\r\n      question_width,\r\n    } = req.body;\r\n    const question = await db.Question.create({\r\n      form_id,\r\n      question_text,\r\n      question_type,\r\n      question_options,\r\n      question_group,\r\n      question_width,\r\n    });\r\n    if (question) {\r\n      res.status(201).json({\r\n        data: question,\r\n        mensaje: \"Pregunta agregada con exito\",\r\n        success: true,\r\n      });\r\n    } else {\r\n      res.status(400).json({\r\n        mensaje: \"Ocurrio un error al crear la pregunta\",\r\n        success: false,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      mensaje: \"Ocurrio un error al crear la pregunta\",\r\n      success: false,\r\n      error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getQuestion = async (req, res) => {\r\n  try {\r\n    const question = await db.Question.findByPk(req.params.id);\r\n    if (question) {\r\n      res.status(200).json({\r\n        data: question,\r\n        mensaje: \"Operación realizada con exito\",\r\n        success: true,\r\n      });\r\n    } else {\r\n      res\r\n        .status(400)\r\n        .json({ mensaje: \"Pregunta no encontrada\", success: false });\r\n    }\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      mensaje: \"Ocurrio un error al consultar los datos\",\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateQuestion = async (req, res) => {\r\n  try {\r\n    const question = await db.Question.update(req.body, {\r\n      where: { question_id: req.params.id },\r\n    });\r\n    if (question[0]) {\r\n      res\r\n        .status(200)\r\n        .json({ mensaje: \"Pregunta actualizada con exito\", success: true });\r\n    } else {\r\n      res\r\n        .status(400)\r\n        .json({ mensaje: \"No existe la pregunta\", success: false });\r\n    }\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      mensaje: \"Ocurrio un error al actualizar los datos\",\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteQuestion = async (req, res) => {\r\n  try {\r\n    const question = await db.Question.destroy({\r\n      where: { question_id: req.params.id },\r\n    });\r\n    if (question) {\r\n      res\r\n        .status(200)\r\n        .json({ mensaje: \"Pregunta eliminada con exito\", success: true });\r\n    } else {\r\n      res\r\n        .status(400)\r\n        .json({ mensaje: \"No existe la pregunta\", success: false });\r\n    }\r\n  } catch (error) {\r\n    res.status(400).json({\r\n      mensaje: \"Ocurrio un error al eliminar los datos\",\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,uBAAA,CAAAF,OAAA;AAAmD,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAF,wBAAAE,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAE5C,MAAMY,YAAY,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,eAAE,CAACC,QAAQ,CAACC,OAAO,CAAC;MACrCC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAEJ,eAAE,CAACK;MAAK,CAAC;IAC9B,CAAC,CAAC;IACFP,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;MAAER,IAAI;MAAES,OAAO,EAAE,+BAA+B;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EAC5E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,yCAAyC;MAClDC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAACE,OAAA,CAAAf,YAAA,GAAAA,YAAA;AAEF,SAASgB,iBAAiBA,CAACC,SAAS,EAAEC,IAAI,EAAE;EAC1CC,OAAO,CAACC,GAAG,CAACH,SAAS,EAACC,IAAI,CAAC;EAC3B,OAAO;IACL,CAACD,SAAS,GAAG;MACX,CAACI,QAAE,CAACC,GAAG,GAAG;QACR,CAACD,QAAE,CAACE,GAAG,GAAGL,IAAI,GAAG,WAAW;QAC5B,CAACG,QAAE,CAACG,GAAG,GAAGN,IAAI,GAAG;MACnB;IACF;EACF,CAAC;AACH;AAEO,MAAMO,+BAA+B,GAAG,MAAAA,CAAOxB,GAAG,EAAEC,GAAG,KAAK;EACjE,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,eAAE,CAACC,QAAQ,CAACC,OAAO,CAAC;MACrCC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAEJ,eAAE,CAACK;MAAK,CAAC,EAClB;QACED,KAAK,EAAEJ,eAAE,CAACsB,MAAM;QAChBC,KAAK,EAAE;UACL,CAACN,QAAE,CAACC,GAAG,GAAG,CACR;YAAEM,eAAe,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;UAAe,CAAC,EAC9C;YAAEC,gBAAgB,EAAEC,iBAAS,CAACC,EAAE,CAAC,MAAM,EAAEhC,GAAG,CAAC4B,MAAM,CAACX,IAAI;UAAC;UACzD;UAAA;QAEJ;MACF,CAAC,CACF;;MACDS,KAAK,EAAE;QAAEO,OAAO,EAAEjC,GAAG,CAAC4B,MAAM,CAACK;MAAQ;IACvC,CAAC,CAAC;IACFhC,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;MAAER,IAAI;MAAES,OAAO,EAAE,+BAA+B;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EAC5E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBG,KAAK;MACLF,OAAO,EAAE,yCAAyC;MAClDC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAACE,OAAA,CAAAU,+BAAA,GAAAA,+BAAA;AAEK,MAAMU,cAAc,GAAG,MAAAA,CAAOlC,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAM;MACJgC,OAAO;MACPE,aAAa;MACbC,aAAa;MACbC,gBAAgB;MAChBC,cAAc;MACdC;IACF,CAAC,GAAGvC,GAAG,CAACwC,IAAI;IACZ,MAAMC,QAAQ,GAAG,MAAMtC,eAAE,CAACC,QAAQ,CAACsC,MAAM,CAAC;MACxCT,OAAO;MACPE,aAAa;MACbC,aAAa;MACbC,gBAAgB;MAChBC,cAAc;MACdC;IACF,CAAC,CAAC;IACF,IAAIE,QAAQ,EAAE;MACZxC,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBR,IAAI,EAAEuC,QAAQ;QACd9B,OAAO,EAAE,6BAA6B;QACtCC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLX,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBC,OAAO,EAAE,uCAAuC;QAChDC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,uCAAuC;MAChDC,OAAO,EAAE,KAAK;MACdC;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAACC,OAAA,CAAAoB,cAAA,GAAAA,cAAA;AAEK,MAAMS,WAAW,GAAG,MAAAA,CAAO3C,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF,MAAMwC,QAAQ,GAAG,MAAMtC,eAAE,CAACC,QAAQ,CAACwC,QAAQ,CAAC5C,GAAG,CAAC4B,MAAM,CAACiB,EAAE,CAAC;IAC1D,IAAIJ,QAAQ,EAAE;MACZxC,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBR,IAAI,EAAEuC,QAAQ;QACd9B,OAAO,EAAE,+BAA+B;QACxCC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLX,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;IAChE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,yCAAyC;MAClDC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAACE,OAAA,CAAA6B,WAAA,GAAAA,WAAA;AAEK,MAAMG,cAAc,GAAG,MAAAA,CAAO9C,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAMwC,QAAQ,GAAG,MAAMtC,eAAE,CAACC,QAAQ,CAAC2C,MAAM,CAAC/C,GAAG,CAACwC,IAAI,EAAE;MAClDd,KAAK,EAAE;QAAEsB,WAAW,EAAEhD,GAAG,CAAC4B,MAAM,CAACiB;MAAG;IACtC,CAAC,CAAC;IACF,IAAIJ,QAAQ,CAAC,CAAC,CAAC,EAAE;MACfxC,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,gCAAgC;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACvE,CAAC,MAAM;MACLX,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,0CAA0C;MACnDC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAACE,OAAA,CAAAgC,cAAA,GAAAA,cAAA;AAEK,MAAMG,cAAc,GAAG,MAAAA,CAAOjD,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAMwC,QAAQ,GAAG,MAAMtC,eAAE,CAACC,QAAQ,CAAC8C,OAAO,CAAC;MACzCxB,KAAK,EAAE;QAAEsB,WAAW,EAAEhD,GAAG,CAAC4B,MAAM,CAACiB;MAAG;IACtC,CAAC,CAAC;IACF,IAAIJ,QAAQ,EAAE;MACZxC,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,8BAA8B;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACrE,CAAC,MAAM;MACLX,GAAG,CACAQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,wCAAwC;MACjDC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAACE,OAAA,CAAAmC,cAAA,GAAAA,cAAA"}