{"version":3,"file":"_auth.controller.js","names":["_jsonwebtoken","_interopRequireDefault","require","_models","login","req","res","correo","password","body","status","json","mensaje","success","existe","db","User","findOne","where","user_mail","include","model","Role","attributes","matchPassword","comparePassword","user_password","token","jwt","sign","id","user_id","process","env","API_KEY","expiresIn","rol","role_name","usuario","nombre","concat","user_name","user_lastName","user_maternalLastName","avatar","user_avatar","exports","checkToken","headers","decoded","verify","user","findByPk"],"sources":["../../src/controllers/_auth.controller.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport db from '../database/models';\r\n\r\nexport const login = async (req, res) => {\r\n  const { correo, password } = req.body;\r\n  if (!correo || !password) return res.status(401).json({ mensaje: 'Datos incorrectos', success: false });\r\n  const existe = await db.User.findOne({\r\n    where: { user_mail: correo },\r\n    include: [{ model: db.Role, attributes: ['role_name'] }]\r\n  });\r\n  if (!existe) return res.status(401).json({ mensaje: 'Datos incorrectos', success: false });\r\n  const matchPassword = await db.User.comparePassword(password, existe.user_password);\r\n  // console.log(matchPassword, password, existe.user_password)\r\n  // if (!matchPassword) return res.status(401).json({ mensaje: 'Las contraseñas no coinciden', success: false });\r\n  const token = jwt.sign({ id: existe.user_id }, process.env.API_KEY, { expiresIn: '1d' });\r\n  res.status(200).json({\r\n    token,\r\n    rol: existe.Role.role_name,\r\n    usuario: {\r\n      id: existe.user_id,\r\n      correo: existe.user_mail,\r\n      nombre: `${existe.user_name || ''} ${existe.user_lastName || ''} ${existe.user_maternalLastName || ''}`,\r\n      avatar: existe.user_avatar\r\n    },\r\n    success: true\r\n  });\r\n}\r\n\r\nexport const checkToken = async (req, res) => {\r\n  const token = req.headers['x-access-token'];\r\n  if (token) {\r\n    const decoded = jwt.verify(token, process.env.API_KEY);\r\n    const user = await db.User.findByPk(decoded.id);\r\n    if (user) {\r\n      res.status(200).json({\r\n        usuario: {\r\n          correo: user.user_mail,\r\n          nombre: `${user.user_name || ''} ${user.user_lastName || ''} ${user.user_maternalLastName || ''}`,\r\n          avatar: user.user_avatar\r\n        },\r\n        success: true\r\n      });\r\n    } else {\r\n      res.status(403).json({\r\n        mensaje: 'No tienes permisos suficientes para realizar la operación',\r\n        success: false\r\n      });\r\n    }\r\n  } else {\r\n    res.status(403).json({ mensaje: 'El token es obligatorio', success: false });\r\n  }\r\n}"],"mappings":";;;;;;;AAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEO,MAAME,KAAK,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACvC,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EACrC,IAAI,CAACF,MAAM,IAAI,CAACC,QAAQ,EAAE,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE,mBAAmB;IAAEC,OAAO,EAAE;EAAM,CAAC,CAAC;EACvG,MAAMC,MAAM,GAAG,MAAMC,eAAE,CAACC,IAAI,CAACC,OAAO,CAAC;IACnCC,KAAK,EAAE;MAAEC,SAAS,EAAEZ;IAAO,CAAC;IAC5Ba,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAEN,eAAE,CAACO,IAAI;MAAEC,UAAU,EAAE,CAAC,WAAW;IAAE,CAAC;EACzD,CAAC,CAAC;EACF,IAAI,CAACT,MAAM,EAAE,OAAOR,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE,mBAAmB;IAAEC,OAAO,EAAE;EAAM,CAAC,CAAC;EAC1F,MAAMW,aAAa,GAAG,MAAMT,eAAE,CAACC,IAAI,CAACS,eAAe,CAACjB,QAAQ,EAAEM,MAAM,CAACY,aAAa,CAAC;EACnF;EACA;EACA,MAAMC,KAAK,GAAGC,qBAAG,CAACC,IAAI,CAAC;IAAEC,EAAE,EAAEhB,MAAM,CAACiB;EAAQ,CAAC,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO,EAAE;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EACxF7B,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IACnBgB,KAAK;IACLS,GAAG,EAAEtB,MAAM,CAACQ,IAAI,CAACe,SAAS;IAC1BC,OAAO,EAAE;MACPR,EAAE,EAAEhB,MAAM,CAACiB,OAAO;MAClBxB,MAAM,EAAEO,MAAM,CAACK,SAAS;MACxBoB,MAAM,KAAAC,MAAA,CAAK1B,MAAM,CAAC2B,SAAS,IAAI,EAAE,OAAAD,MAAA,CAAI1B,MAAM,CAAC4B,aAAa,IAAI,EAAE,OAAAF,MAAA,CAAI1B,MAAM,CAAC6B,qBAAqB,IAAI,EAAE,CAAE;MACvGC,MAAM,EAAE9B,MAAM,CAAC+B;IACjB,CAAC;IACDhC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC;AAAAiC,OAAA,CAAA1C,KAAA,GAAAA,KAAA;AAEM,MAAM2C,UAAU,GAAG,MAAAA,CAAO1C,GAAG,EAAEC,GAAG,KAAK;EAC5C,MAAMqB,KAAK,GAAGtB,GAAG,CAAC2C,OAAO,CAAC,gBAAgB,CAAC;EAC3C,IAAIrB,KAAK,EAAE;IACT,MAAMsB,OAAO,GAAGrB,qBAAG,CAACsB,MAAM,CAACvB,KAAK,EAAEK,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;IACtD,MAAMiB,IAAI,GAAG,MAAMpC,eAAE,CAACC,IAAI,CAACoC,QAAQ,CAACH,OAAO,CAACnB,EAAE,CAAC;IAC/C,IAAIqB,IAAI,EAAE;MACR7C,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnB2B,OAAO,EAAE;UACP/B,MAAM,EAAE4C,IAAI,CAAChC,SAAS;UACtBoB,MAAM,KAAAC,MAAA,CAAKW,IAAI,CAACV,SAAS,IAAI,EAAE,OAAAD,MAAA,CAAIW,IAAI,CAACT,aAAa,IAAI,EAAE,OAAAF,MAAA,CAAIW,IAAI,CAACR,qBAAqB,IAAI,EAAE,CAAE;UACjGC,MAAM,EAAEO,IAAI,CAACN;QACf,CAAC;QACDhC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLP,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBC,OAAO,EAAE,2DAA2D;QACpEC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,MAAM;IACLP,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,yBAAyB;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC;EAC9E;AACF,CAAC;AAAAiC,OAAA,CAAAC,UAAA,GAAAA,UAAA"}